@page "/questionnaireEditDrugs/{currentPerson:int}"

@using MudProject.Data
@using DataAccess
@using MudProject.Models
@inject IMySQLDataAccess _data
@inject IConfiguration _config
@inject NavigationManager UriHelper


@if (editingStatus == false)
{
    <MudCard>
        <MudCardHeader>
            <CardHeaderContent>
                    <MudItem xs="12" sm="12"><MudText Align="Align.Left" Typo="Typo.h6">Drugs Questionnaire</MudText></MudItem>
                    <MudGrid>
@*                    <MudItem xs="12" sm="12"><MudText Align="Align.Left" Typo="Typo.h6">Drugs Questionnaire</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>What drugs do you take?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D01</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>How frequently do you use drugs?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D02</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>How much do you spend per week on drugs?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D03</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>What do you want to change about your drug use?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D04</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>Do you know how to reduce/stop drug use?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D05</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>What have you tried to stop/reduce in the past?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D06</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>Are you known to any services?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D07</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>Why do you take drugs?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D08</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>Would you like different ways of dealing with the above issues?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D09</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>If you, which ones?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D10</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>Consequences of drug use? </b></MudText><MudText>@newDrugQuestion.drugQuestion.D11</MudText></MudItem>
                    <MudItem xs="12"><MudText><b>What is your current alcohol use?</b></MudText><MudText>@newDrugQuestion.drugQuestion.D12</MudText></MudItem>
*@                    <MudGrid>
                        <MudItem xs="12" sm="3"><MudIconButton @onclick=@Navigate Color="Color.Primary" Icon="@Icons.Material.Filled.KeyboardReturn">Back</MudIconButton></MudItem>
                        <MudItem xs="12" sm="7"></MudItem>
                        <MudButton Color="Color.Primary" OnClick="EditQuestion">Fill/Edit</MudButton>
                    </MudGrid>
                    <MudDivider DividerType="DividerType.Middle" Class="my-2" />
                </MudGrid>
            </CardHeaderContent>
        </MudCardHeader>
    </MudCard>
}

@if (editingStatus == true)
{
    <MudCard>
        <MudCardContent>
            <MudItem xs="12" sm="12"><MudText Align="Align.Left" Typo="Typo.h5">Editing</MudText></MudItem>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />
            <EditForm Model="@newDrugQuestion" OnValidSubmit="@OnValidSubmit">
                <DataAnnotationsValidator />
                <MudGrid>
                    <MudItem xs="12" sm="12"><MudText Align="Align.Left" Typo="Typo.h6">Drugs Questionnaire</MudText></MudItem>

                    <MudItem xs="12" sm="12"><MudTextField Label="What drugs do you take?" @bind-Value="newDrugQuestion.drugQuestion.D01" For="@(() => newDrugQuestion.drugQuestion.D01)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="How frequently do you use drugs?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D02" For="@(() => newDrugQuestion.drugQuestion.D02)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="How much do you spend per week on drugs?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D03" For="@(() => newDrugQuestion.drugQuestion.D03)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="What do you want to change about your drug use?" @bind-Value="newDrugQuestion.drugQuestion.D04" For="@(() => newDrugQuestion.drugQuestion.D04)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="Do you know how to reduce/stop drug use?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D05" For="@(() => newDrugQuestion.drugQuestion.D05)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="What have you tried to stop/reduce in the past?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D06" For="@(() => newDrugQuestion.drugQuestion.D06)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="Are you known to any services?" @bind-Value="newDrugQuestion.drugQuestion.D07" For="@(() => newDrugQuestion.drugQuestion.D07)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="Why do you take drugs?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D08" For="@(() => newDrugQuestion.drugQuestion.D08)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="Would you like different ways of dealing with the above issues? " HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D09" For="@(() => newDrugQuestion.drugQuestion.D09)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="If you, which ones?" @bind-Value="newDrugQuestion.drugQuestion.D10" For="@(() => newDrugQuestion.drugQuestion.D10)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="Consequences of drug use?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D11" For="@(() => newDrugQuestion.drugQuestion.D11)" /></MudItem>
                    <MudItem xs="12" sm="12"><MudTextField Label="What is your current alcohol use?" HelperText=" " @bind-Value="newDrugQuestion.drugQuestion.D12" For="@(() => newDrugQuestion.drugQuestion.D12)" /></MudItem>

                    <MudItem xs="12" sm="2"><MudButton @onclick=@ShowQuestions Variant="Variant.Filled" Color="Color.Primary">Cancel</MudButton></MudItem>
                    <MudItem xs="12" sm="6"></MudItem>
                    <MudItem xs="12" sm="3"><MudButton ButtonType="ButtonType.Submit" @onclick=@ShowQuestions Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton></MudItem>
                    <MudDivider DividerType="DividerType.Middle" Class="my-2" />
                </MudGrid>
            </EditForm>
        </MudCardContent>
    </MudCard>
}

@code {

    [Parameter]
    public int currentPerson { get; set; }

    void Navigate()
    {
        UriHelper.NavigateTo($"/studentEditing/{currentPerson}");
    }

    bool editingStatus = false;

    List<DrugsQuestionnaireModel>? details;
    List<StudentModel>? Studentdetails;

    private StudentDrugQuestionModel newDrugQuestion = new StudentDrugQuestionModel();
    
    //// Load the initial data
    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT * FROM students WHERE StudentId = " + currentPerson;
        Studentdetails = await _data.LoadData<StudentModel, dynamic>(sql, new { }, _config.GetConnectionString("MySQLConnection"));
        string sql2 = "SELECT * FROM drug_questions WHERE StudentId_DFK = " + currentPerson;
        details = await _data.LoadData<DrugsQuestionnaireModel, dynamic>(sql, new { }, _config.GetConnectionString("MySQLConnection"));
        newDrugQuestion.drugQuestion = details.FirstOrDefault();
    }


    //Edit
   private async Task OnValidSubmit()
    {
        string sqlUpdateQuestion = "Update drug_questions SET D01 = @D01, D02 = @D02,D03 = @D03,D04 = @D04,D05 = @D05,"+
        "D06 = @D06,D07 = @D07,D08 = @D08,D09 = @D09,D10 = @D10,D11 = @D11,D12 = @D12 where StudentId_DFK =" + currentPerson;
        await _data.SaveData(sqlUpdateQuestion, newDrugQuestion.drugQuestion, _config.GetConnectionString("MySqlConnection"));
        editingStatus = false;
    }

    //Edit Form
    private async Task EditQuestion()
    {
        editingStatus = true;
    }

    private async Task ShowQuestions()
    {
        editingStatus = false;
    }
}