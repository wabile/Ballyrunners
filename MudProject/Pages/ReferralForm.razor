@page "/referralform"

@using MudProject.Data
@using DataAccess
@using MudProject.Models
@inject IMySQLDataAccess _data
@inject IConfiguration _config
@inject NavigationManager UriHelper

<h2>Referral Form</h2>

<form>
    <MudGrid>
        <MudItem xs="12" sm="12">
            <MudPaper Class="pa-4">
                <EditForm Model="@newReferral" OnValidSubmit="@InsertReferral">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <MudTextField Label="First Name" HelperText="Max. 8 characters" @bind-Value="addReferral.RefName" />
                    <MudTextField Label="Date of Birth" HelperText="Max. 8 characters" @bind-Value="addReferral.RefDob" />
                    <MudTextField Label="Address" HelperText="Max. 8 characters" @bind-Value="addReferral.RefAddress1" />
                    <MudTextField Label="Address 2" HelperText="Max. 8 characters" @bind-Value="addReferral.RefAddress2" />
                    <MudTextField Label="Address 3" HelperText="Max. 8 characters" @bind-Value="addReferral.RefAddress3" />
                    <MudTextField Label="Address 4" HelperText="Max. 8 characters" @bind-Value="addReferral.RefAddress4" />
                    <MudTextField Label="Contact Number" HelperText="Max. 8 characters" @bind-Value="addReferral.RefContact1" />
                    <MudTextField Label="Contact Number 2" HelperText="Max. 8 characters" @bind-Value="addReferral.RefContact2" />
                    <MudTextField Label="PPS Number" HelperText="Max. 8 characters" @bind-Value="addReferral.RefPPS" />
                    <MudTextField Label="Name Referrer" HelperText="Max. 8 characters" @bind-Value="addReferral.RefNameReferring" />
                    <MudTextField Label="Name of Referring Agency" HelperText="Max. 8 characters" @bind-Value="addReferral.RefNameReferrer" />
                    <MudTextField Label="Contact Number" HelperText="Max. 8 characters" @bind-Value="addReferral.RefContact1" />
                    <MudTextField Label="Contact Number 2" HelperText="Max. 8 characters" @bind-Value="addReferral.RefContact2" />
                    <MudTextField T="string" Label="Background Information on Young Person" Variant="Variant.Text" Lines="5" />
                    <MudTextField Label="Medical Issue" HelperText="Max. 8 characters" @bind-Value="addReferral.RefMedical" />
                    <MudTextField Label="Next of Kin" HelperText="Max. 8 characters" @bind-Value="addReferral.RefKin" />
                    <MudTextField Label="Date of Referral" HelperText="Max. 8 characters" @bind-Value="addReferral.DateReferral" />
                </EditForm>
            </MudPaper>
        </MudItem>
    </MudGrid>


    <div class="form-group col-md-6 mb-sm-5">
        <label for="backgroundInformationTextarea">Background Information on Young Person</label>
        <textarea type="text" class="form-control" id="backgroundInformationTextarea"
                  rows="3" placeholder="i.e. literacy, mental health, addiction, offending
                  behaviour, safety issues" @onchange="@((args) => addReferral.RefBackground = args.Value.ToString())"></textarea>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>


</form>

<button type="submit" class="btn btn-primary" @onclick=@Navigate>Next</button>

@code {

    void Navigate()

    {
        UriHelper.NavigateTo("samples");
    }

    List<ReferralFormModel>? referral;
    List<ReferralFormModel>? thisReferral;

    private ReferralFormModel newReferral = new ReferralFormModel();


    // booleans to determine what to display in the UI

    bool createStatus = true;
    bool editStatus = false;
    bool deleteErrorMessage = false;



    // error message for db delete exception
    string dbErrorMessage = "";

    // variable to keep track of the current appt being edited
    int apptBeingEdited;

    public class AddReferral
    {
        public string? RefName { get; set; }
        public DateTime RefDob { get; set; }
        public string? RefAddress1 { get; set; }
        public string? RefAddress2 { get; set; }
        public string? RefAddress3 { get; set; }
        public string? RefAddress4 { get; set; }
        public string? RefContact1 { get; set; }
        public string? RefContact2 { get; set; }
        public string? RefPPS { get; set; }
        public string? RefNameReferring { get; set; }
        public string? RefNameReferrer { get; set; }
        public string? RefBackground { get; set; }
        public string? RefMedical { get; set; }
        public string? RefKin { get; set; }
        public DateTime DateReferral { get; set; }

    }

    private AddReferral addReferral = new AddReferral();

    // Load the initial data
    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT * FROM referral";
        referral = await _data.LoadData<ReferralFormModel, dynamic>(sql, new { }, _config.GetConnectionString("MySQLConnection"));
    }

    // Insert Appointments
    private async Task InsertReferral()
    {
        ReferralFormModel a = new ReferralFormModel

            {
                RefName = new string(addReferral.RefName),
                RefDob = new DateTime(addReferral.RefDob.Year, addReferral.RefDob.Month, addReferral.RefDob.Day),
                RefAddress1 = new string(addReferral.RefAddress1),
                RefAddress2 = new string(addReferral.RefAddress2),
                RefAddress3 = new string(addReferral.RefAddress3),
                RefAddress4 = new string(addReferral.RefAddress4),
                RefContact1 = new string(addReferral.RefContact1),
                RefContact2 = new string(addReferral.RefContact2),
                RefPPS = new string(addReferral.RefPPS),
                RefNameReferring = new string(addReferral.RefNameReferring),
                RefNameReferrer = new string(addReferral.RefNameReferrer),
                RefBackground = new string(addReferral.RefBackground),
                RefMedical = new string(addReferral.RefMedical),
                RefKin = new string(addReferral.RefKin),
                DateReferral = new DateTime(addReferral.DateReferral.Year, addReferral.DateReferral.Month, addReferral.DateReferral.Day),
            };

        string sql = "INSERT INTO referral (RefName, RefDob, RefAddress1, RefAddress2, RefAddress3, RefAddress4, " +
                "RefContact1, RefContact2, RefPPS, RefNameReferring, RefNameReferrer, RefBackground, RefMedical, RefKin, DateReferral)" +
                "VALUES (@RefName, @RefDob, @RefAddress1, @RefAddress2, @RefAddress3, @RefAddress4, " +
                "@RefContact1, @RefContact2, @RefPPS, @RefNameReferring, @RefNameReferrer, @RefBackground, @RefMedical, @RefKin, @DateReferral);";

        await _data.SaveData(sql, a, _config.GetConnectionString("MySqlConnection"));
        await OnInitializedAsync();
        a = new ReferralFormModel();
        addReferral = new AddReferral();
    }
 }